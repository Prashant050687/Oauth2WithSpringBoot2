drop table if exists oauth_client_details;
CREATE TABLE oauth_client_details (
  client_id varchar(255) NOT NULL,
  resource_ids varchar(255) DEFAULT NULL,
  client_secret varchar(255) DEFAULT NULL,
  scope varchar(255) DEFAULT NULL,
  authorized_grant_types varchar(255) DEFAULT NULL,
  web_server_redirect_uri varchar(255) DEFAULT NULL,
  authorities varchar(255) DEFAULT NULL,
  access_token_validity integer(11) DEFAULT NULL,
  refresh_token_validity integer(11) DEFAULT NULL,
  additional_information varchar(255) DEFAULT NULL,
  autoapprove varchar(255) DEFAULT NULL
);


drop table if exists AUTHORITY;
CREATE TABLE AUTHORITY (
   ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
   NAME VARCHAR(255),
   PRIMARY KEY (ID)
);

ALTER TABLE AUTHORITY ADD CONSTRAINT AUTHORITY_NAME UNIQUE(NAME);

drop table if exists USER_;
CREATE TABLE USER_ (
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
  PASSWORD VARCHAR(255),
  USER_NAME VARCHAR(255),
  ACCOUNT_EXPIRED BOOLEAN,
  ACCOUNT_LOCKED BOOLEAN,
  CREDENTIALS_EXPIRED BOOLEAN,
  ENABLED BOOLEAN,
  PRIMARY KEY (ID)
);

ALTER TABLE USER_ ADD CONSTRAINT USER_USER_NAME UNIQUE(USER_NAME);

drop table if exists USERS_AUTHORITIES;
CREATE TABLE USERS_AUTHORITIES (
   USER_ID BIGINT NOT NULL,
   AUTHORITY_ID BIGINT NOT NULL,
   PRIMARY KEY (USER_ID, AUTHORITY_ID)
);

ALTER TABLE USERS_AUTHORITIES ADD CONSTRAINT USERS_AUTHORITIES_AUTHORITY
   FOREIGN KEY (AUTHORITY_ID) REFERENCES AUTHORITY;

ALTER TABLE USERS_AUTHORITIES ADD CONSTRAINT USERS_AUTHORITIES_USER_
   FOREIGN KEY (USER_ID) REFERENCES USER_